from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pacientes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FichaClinica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dente', models.CharField(blank=True, help_text='Número ou região do dente', max_length=10, null=True, verbose_name='Dente')),
                ('data_abertura', models.DateField(auto_now_add=True, verbose_name='Data de abertura')),
                ('queixa_principal', models.TextField(verbose_name='Queixa principal')),
                ('status', models.CharField(choices=[('A', 'Aberta'), ('E', 'Em Andamento'), ('F', 'Finalizada')], default='A', max_length=1, verbose_name='Status')),
                ('tratamento_medico', models.BooleanField(default=False, verbose_name='Está sob tratamento médico?')),
                ('uso_medicamentos', models.TextField(blank=True, null=True, verbose_name='Uso de medicamentos')),
                ('alergias', models.TextField(blank=True, null=True, verbose_name='Alergias')),
                ('problemas_cardiacos', models.BooleanField(default=False, verbose_name='Problemas Cardíacos')),
                ('gastrite_ulceras', models.BooleanField(default=False, verbose_name='Gastrite/Úlceras')),
                ('problemas_neurologicos', models.BooleanField(default=False, verbose_name='Problemas Neurológicos')),
                ('problemas_coagulacao', models.BooleanField(default=False, verbose_name='Problemas de Coagulação')),
                ('diabetes', models.BooleanField(default=False, verbose_name='Diabetes')),
                ('sensibilidade_anestesicos', models.BooleanField(default=False, verbose_name='Sensibilidade a anestésicos/antibióticos')),
                ('pressao_arterial', models.BooleanField(default=False, verbose_name='Pressão arterial alterada')),
                ('gravidez', models.BooleanField(default=False, verbose_name='Gravidez')),
                ('sifilis', models.BooleanField(default=False, verbose_name='Sífilis')),
                ('epilepsia', models.BooleanField(default=False, verbose_name='Epilepsia')),
                ('lesao_figado', models.BooleanField(default=False, verbose_name='Lesão de Fígado')),
                ('lesao_renal', models.BooleanField(default=False, verbose_name='Lesão Renal')),
                ('outras_condicoes', models.TextField(blank=True, null=True, verbose_name='Outras condições/informações')),
                ('historia_dental', models.TextField(blank=True, null=True, verbose_name='História dental atual')),
                ('dor_presente', models.BooleanField(default=False, verbose_name='Dor presente')),
                ('estimulo', models.CharField(blank=True, choices=[('F', 'Frio'), ('Q', 'Quente'), ('D', 'Doce'), ('M', 'Mastigação'), ('E', 'Espontânea'), ('O', 'Outro')], max_length=1, null=True, verbose_name='Estímulo')),
                ('localizacao', models.CharField(blank=True, choices=[('L', 'Localizada'), ('D', 'Difusa')], max_length=1, null=True, verbose_name='Localização')),
                ('frequencia', models.CharField(blank=True, choices=[('C', 'Contínua'), ('I', 'Intermitente')], max_length=1, null=True, verbose_name='Frequência')),
                ('intensidade', models.CharField(blank=True, choices=[('L', 'Leve'), ('M', 'Moderada'), ('A', 'Aguda')], max_length=1, null=True, verbose_name='Intensidade')),
                ('inicio', models.CharField(blank=True, choices=[('P', 'Provocada'), ('E', 'Espontânea')], max_length=1, null=True, verbose_name='Início')),
                ('duracao', models.CharField(blank=True, choices=[('S', 'Segundos'), ('M', 'Minutos'), ('H', 'Horas'), ('D', 'Dias')], max_length=1, null=True, verbose_name='Duração')),
                ('exacerbada_frio', models.BooleanField(default=False, verbose_name='Exacerbada por Frio')),
                ('exacerbada_quente', models.BooleanField(default=False, verbose_name='Exacerbada por Quente')),
                ('exacerbada_doce', models.BooleanField(default=False, verbose_name='Exacerbada por Doce')),
                ('exacerbada_mastigacao', models.BooleanField(default=False, verbose_name='Exacerbada por Mastigação')),
                ('exacerbada_outro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Exacerbada por Outro')),
                ('aliviada_ar', models.BooleanField(default=False, verbose_name='Aliviada por Ar')),
                ('aliviada_analgesico', models.BooleanField(default=False, verbose_name='Aliviada por Analgésico')),
                ('aliviada_decubito', models.BooleanField(default=False, verbose_name='Aliviada por Decúbito')),
                ('aliviada_outro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Aliviada por Outro')),
                ('assimetria_facial', models.BooleanField(default=False, verbose_name='Assimetria facial')),
                ('tumefacao', models.BooleanField(default=False, verbose_name='Tumefação')),
                ('fistula_cutanea', models.BooleanField(default=False, verbose_name='Fístula cutânea')),
                ('enfartamento_ganglionar', models.BooleanField(default=False, verbose_name='Enfartamento Ganglionar')),
                ('fistula', models.BooleanField(default=False, verbose_name='Fístula')),
                ('ulceracao', models.BooleanField(default=False, verbose_name='Ulceração')),
                ('alteracao_cor', models.BooleanField(default=False, verbose_name='Alteração de cor')),
                ('tumefacao_apical', models.BooleanField(default=False, verbose_name='Tumefação apical')),
                ('bolsa_periodontal', models.BooleanField(default=False, verbose_name='Bolsa Periodontal')),
                ('carie', models.BooleanField(default=False, verbose_name='Cárie')),
                ('restauracao', models.CharField(choices=[('N', 'Não possui'), ('M', 'Metálica'), ('R', 'Resina'), ('O', 'Outro')], default='N', max_length=1, verbose_name='Restauração')),
                ('exposicao_pulpar', models.CharField(choices=[('N', 'Não possui'), ('P', 'Patológica'), ('M', 'Mecânica')], default='N', max_length=1, verbose_name='Exposição pulpar')),
                ('alteracao_cor_coroa', models.BooleanField(default=False, verbose_name='Alteração de cor da coroa')),
                ('mobilidade', models.BooleanField(default=False, verbose_name='Mobilidade')),
                ('teste_frio', models.CharField(blank=True, choices=[('N', 'Normal'), ('A', 'Ausente'), ('D', 'Diminuída'), ('E', 'Exacerbada')], max_length=1, null=True, verbose_name='Teste Frio')),
                ('teste_quente', models.CharField(blank=True, choices=[('N', 'Normal'), ('A', 'Ausente'), ('D', 'Diminuída'), ('E', 'Exacerbada')], max_length=1, null=True, verbose_name='Teste Quente')),
                ('percussao_vertical', models.CharField(blank=True, choices=[('N', 'Negativa'), ('P', 'Positiva')], max_length=1, null=True, verbose_name='Percussão Vertical')),
                ('percussao_horizontal', models.CharField(blank=True, choices=[('N', 'Negativa'), ('P', 'Positiva')], max_length=1, null=True, verbose_name='Percussão Horizontal')),
                ('palpacao_apical', models.CharField(blank=True, choices=[('N', 'Negativa'), ('P', 'Positiva')], max_length=1, null=True, verbose_name='Palpação Apico-Cervical')),
                ('camara_pulpar', models.CharField(blank=True, choices=[('N', 'Normal'), ('C', 'Calcificada'), ('A', 'Alterada')], max_length=1, null=True, verbose_name='Câmara Pulpar')),
                ('canal_radicular', models.CharField(blank=True, choices=[('N', 'Normal'), ('A', 'Atresiados'), ('C', 'Calcificados'), ('D', 'Dilacerados')], max_length=1, null=True, verbose_name='Canal Radicular')),
                ('pericemento', models.CharField(blank=True, choices=[('N', 'Normal'), ('E', 'Espessado')], max_length=1, null=True, verbose_name='Pericemento')),
                ('rarefacao_ossea', models.BooleanField(default=False, verbose_name='Rarefação óssea')),
                ('rarefacao_tipo', models.CharField(blank=True, choices=[('D', 'Difusa'), ('C', 'Circunscrita')], max_length=1, null=True, verbose_name='Tipo de Rarefação')),
                ('nodulos', models.BooleanField(default=False, verbose_name='Nódulos')),
                ('deformacao_assoalho', models.BooleanField(default=False, verbose_name='Deformação do assoalho')),
                ('trepanacao', models.BooleanField(default=False, verbose_name='Trepanação')),
                ('reabsorcao_interna', models.BooleanField(default=False, verbose_name='Reabsorção interna')),
                ('reabsorcao_externa', models.BooleanField(default=False, verbose_name='Reabsorção externa')),
                ('instrumento_fraturado', models.BooleanField(default=False, verbose_name='Instrumento fraturado')),
                ('degrau_apical', models.BooleanField(default=False, verbose_name='Degrau apical')),
                ('fratura_radicular', models.BooleanField(default=False, verbose_name='Fratura radicular')),
                ('dilaceracao_apical', models.BooleanField(default=False, verbose_name='Dilaceração apical')),
                ('rizogenese_incompleta', models.BooleanField(default=False, verbose_name='Rizogênese incompleta')),
                ('osteite_condensante', models.BooleanField(default=False, verbose_name='Osteíte Condensante')),
                ('hipercementose', models.BooleanField(default=False, verbose_name='Hipercementose')),
                ('diagnostico', models.TextField(blank=True, null=True, verbose_name='Diagnóstico clínico radiográfico provável')),
                ('tratamento_indicado', models.CharField(blank=True, choices=[('P', 'Pulpectomia'), ('N', 'Necropulpectomia'), ('R', 'Retratamento'), ('O', 'Outro')], max_length=1, null=True, verbose_name='Tratamento indicado')),
                ('ctp', models.CharField(blank=True, max_length=10, null=True, verbose_name='CTP (Comprimento de Trabalho Provisório)')),
                ('iaf', models.CharField(blank=True, max_length=10, null=True, verbose_name='IAF (Lima Apical Inicial)')),
                ('crt', models.CharField(blank=True, max_length=10, null=True, verbose_name='CRT (Comprimento Real de Trabalho)')),
                ('lai', models.CharField(blank=True, max_length=10, null=True, verbose_name='LAI (Limite Apical de Instrumentação)')),
                ('im', models.CharField(blank=True, max_length=10, null=True, verbose_name='IM (Instrumento de Memória)')),
                ('grampo', models.CharField(blank=True, max_length=10, null=True, verbose_name='Grampo')),
                ('canal', models.CharField(blank=True, max_length=50, null=True, verbose_name='Canal')),
                ('cad', models.CharField(blank=True, max_length=50, null=True, verbose_name='CAD (Localizador Apical Eletrônico)')),
                ('solucao_irrigadora', models.CharField(blank=True, max_length=100, null=True, verbose_name='Solução irrigadora')),
                ('curativo_demora', models.CharField(blank=True, max_length=100, null=True, verbose_name='Curativo de demora')),
                ('material_obturador', models.CharField(blank=True, max_length=100, null=True, verbose_name='Material Obturador')),
                ('medicacao_sistemica', models.CharField(blank=True, max_length=100, null=True, verbose_name='Medicação Sistêmica')),
                ('acidentes_operatorios', models.TextField(blank=True, null=True, verbose_name='Acidentes Operatórios')),
                ('pos_tratamento', models.TextField(blank=True, null=True, verbose_name='Pós Tratamento')),
                ('preservacao', models.CharField(blank=True, choices=[('1', '1 mês'), ('3', '3 meses'), ('6', '6 meses'), ('12', '12 meses'), ('24', '24 meses')], max_length=2, null=True, verbose_name='Preservação')),
                ('data_termino', models.DateField(blank=True, null=True, verbose_name='Data término do tratamento')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('criado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fichas_criadas', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fichas_clinicas', to='pacientes.paciente')),
            ],
            options={
                'verbose_name': 'Ficha Clínica',
                'verbose_name_plural': 'Fichas Clínicas',
                'ordering': ['-data_abertura'],
            },
        ),
        migrations.CreateModel(
            name='SessaoAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_sessao', models.DateField(verbose_name='Data da sessão')),
                ('procedimentos', models.TextField(verbose_name='Procedimentos realizados')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('materiais', models.TextField(blank=True, null=True, verbose_name='Materiais utilizados')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='sessoes/imagens/', verbose_name='Imagem/Radiografia')),
                ('descricao_imagem', models.CharField(blank=True, max_length=200, null=True, verbose_name='Descrição da imagem')),
                ('data_registro', models.DateTimeField(auto_now_add=True, verbose_name='Data de registro')),
                ('ficha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessoes', to='fichas_clinicas.fichaclinica')),
                ('realizado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessoes_realizadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sessão de Atendimento',
                'verbose_name_plural': 'Sessões de Atendimento',
                'ordering': ['-data_sessao'],
            },
        ),
    ]